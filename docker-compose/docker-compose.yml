version: "3.4"

networks:
  kabgo-network:
    driver: bridge

services:
  demand-service:
    build:
      context: ../servers/demand
    container_name: demand-service
    hostname: localhost
    ports:
      - "5001:5001"
      - "50051:50051"
    networks:
      - kabgo-network
    volumes:
      - ../servers:/usr/src
      - ../servers/grpc:/usr/src/grpc
      - ../servers/demand:/usr/src/app
    environment:
      SUPPLY_GRPC_CLIENT_HOST: "supply-service"
      SUPPLY_GRPC_CLIENT_PORT: "50052"
      FORCE_COLOR: 1
      DEBUG_COLORS: "true"
      TERM: xterm-256color
      COLORTERM: truecolor

  supply-service:
    build:
      context: ../servers/supply
    container_name: supply-service
    hostname: localhost
    ports:
      - "5002:5002"
      - "50052:50052"
    networks:
      - kabgo-network
    volumes:
      - ../servers:/usr/src
      - ../servers/grpc:/usr/src/grpc
      - ../servers/supply:/usr/src/app
    environment:
      DEMAND_GRPC_CLIENT_HOST: "demand-service"
      DEMAND_GRPC_CLIENT_PORT: "50051"
      FORCE_COLOR: 1
      DEBUG_COLORS: "true"
      TERM: xterm-256color
      COLORTERM: truecolor

  admin-service:
    build:
      context: ../servers/admin
    container_name: admin-service
    hostname: localhost
    ports:
      - "5003:5003"
      - "50053:50053"
    networks:
      - kabgo-network
    volumes:
      - ../servers:/usr/src
      - ../servers/grpc:/usr/src/grpc
      - ../servers/admin:/usr/src/app
    environment:
      DEMAND_GRPC_CLIENT_HOST: "demand-service"
      DEMAND_GRPC_CLIENT_PORT: "50051"

      SUPPLY_GRPC_CLIENT_HOST: "supply-service"
      SUPPLY_GRPC_CLIENT_PORT: "50052"

      FORCE_COLOR: 1
      DEBUG_COLORS: "true"
      TERM: xterm-256color
      COLORTERM: truecolor

  admin-client:
    build:
      context: ../clients/admin
    container_name: admin-client
    hostname: localhost
    ports:
      - "3003:3003"
    networks:
      - kabgo-network
    volumes:
      - ../clients/admin:/usr/src/app
    environment:
      FORCE_COLOR: 1
      DEBUG_COLORS: "true"
      TERM: xterm-256color
      COLORTERM: truecolor

  conduktor-platform:
    image: conduktor/conduktor-platform:1.6.0
    ports:
      - 8080:8080
    volumes:
      - conduktor_data:/var/conduktor
      - type: bind
        source: "./${CONF_NAME:-platform-config}.yaml"
        target: /opt/conduktor/platform-config.yaml
        read_only: true
    depends_on:
      - kafka
      - schema-registry
    environment:
      CDK_IN_CONF_FILE: /opt/conduktor/platform-config.yaml
      KAFKA_BOOTSTRAP_SERVER: kafka:9093
      SR_SERVER: "http://schema-registry:8081"
      LICENSE_KEY: ""
      ORGANISATION_NAME: "hcmus"
      ADMIN_EMAIL: "admin"
      ADMIN_PSW: "1"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:${CDK_LISTENING_PORT:-8080}/platform/api/modules/health/live",
        ]
      interval: 30s
      start_period: 120s # Leave time for the psql init scripts to run
      timeout: 5s
      retries: 3

  zookeeper:
    image: zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/data"
      - "zookeeper_datalog:/datalog"

  kafka:
    image: conduktor/kafka:3.3.1
    hostname: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9101:9101"
    volumes:
      - "kafka_data:/conduktor/kafka"
      - type: bind
        source: ./jmx-exporter.yml
        target: /etc/jmx-exporter.yml
        read_only: true
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,DOCKER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,DOCKER://kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      - KAFKA_CFG_AUTHORIZER_CLASS_NAME=kafka.security.authorizer.AclAuthorizer
      - KAFKA_CFG_ALLOW_EVERYONE_IF_NO_ACL_FOUND=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - JMX_EXPORTER_ENABLE=yes
      - JMX_EXPORTER_PORT=9101
      - JMX_EXPORTER_CONFIG=/etc/jmx-exporter.yml
    depends_on:
      - zookeeper

  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.1
    hostname: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9093
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zookeeper
      - kafka

  eventstore.db:
    image: eventstore/eventstore:23.10.0-bookworm-slim
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "1113:1113"
      - "2113:2113"

volumes:
  zookeeper_data:
  zookeeper_datalog:
  kafka_data:
  conduktor_data:
  eventstore-volume-data:
  eventstore-volume-index:
  eventstore-volume-logs:
